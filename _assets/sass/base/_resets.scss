// Functions
@function pow($number, $exponent) {
  $value: 1;

  @if $exponent > 0 {
    @for $i from 1 through $exponent {
      $value: $value * $number;
    }
  }
  @return $value;
}


// Mixins
@mixin typography(
    $interval: perfect-fourth,
    $headings: (small, body, h6, h5, h4, h3, h2, h1)
  ) {

  $scale: (
    minor-second: 1.067,
    major-second: 1.125,
    minor-third: 1.2,
    major-third: 1.25,
    perfect-fourth: 1.333,
    augmented-fourth: 1.414,
    perfect-fifth: 1.5,
    golden-ratio: 1.618,
    octave: 2
  );

  $scale: map-get($scale, $interval);

  $b: 0;

  @if (index($headings, body)) {
    $b: index($headings, body);
  }

  @each $h in $headings {
    $i: index($headings, $h);

    @if($i > $b) {
      $j: $i - $b;
      $l: $scale;

      @while $l < pow($scale, $j) {
        $l: $l + $scale;
      }

      #{$h} {
        font-size: 1rem * pow($scale, $j);
        line-height: $l * 1rem;
      }
    }

    @if($i < $b) {
      $j: $b - $i;

      #{$h} {
        font-size: 1rem / pow($scale, $j);
        line-height: 1rem * $scale;
      }
    }

    @if($i == $b) {
      body {
        font-size: 1rem;
        line-height: $scale * 1rem;
      }
    }
  }
}

// Resets
:root {
  font-size: calc(1vw + 1vh + .5vmin);

  @media screen and (min-width: 720px) {
    font-size: calc(.5vw + .5vh + .5vmin);
  }
}

* {
  box-sizing: border-box;
  margin-top: 0;
  margin-bottom: 0;

  &:focus {
    outline: none;
  }

  &:not([collapse]):not(head) + * {
    margin-top: 1rem;
  }
}

html,
body {
  margin: 0;
  padding: 0;
  font-family: 'Proxima Nova', 'Helvetica', sans-serif;
}

button {
  background-color: transparent;
  border: none;
  height: 2rem;
  line-height: 1;
  padding: 0;
  -webkit-appearance: none;

  &:hover {
    cursor: pointer;
  }
}

nav > ul,
ul.unstyle,
ol.unstyle {
  list-style: none;
  padding-left: 0;
}

img {
  display: block;
}

.browser_frame {
  display: none;
}

@include typography();
